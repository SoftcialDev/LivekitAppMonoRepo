name: Build, Zip & Deploy – livekit-agent-azure-func

on:
  push:
    branches: [ main ]
    paths:
      - 'apps/api-functions/**'
      - '.github/workflows/main_livekit-agent-azure-func.yml'
  workflow_dispatch:

env:
  FUNC_SRC: apps/api-functions/src
  NODE_VER: '20.x'

jobs:
  build-and-deploy:
    runs-on: windows-latest
    permissions: { contents: read }
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with: { node-version: ${{ env.NODE_VER }} }

      - name: Install, build & Prisma
        shell: pwsh
        run: |
          Push-Location ${{ env.FUNC_SRC }}
          npm ci
          npm run build
          npm run prisma:generate
          if (-Not (Test-Path ".\node_modules\.prisma\client")) {
            Write-Error "❌ Prisma Client missing"; Exit 1
          }
          npm run migrate:deploy
          Pop-Location

      - name: Package ZIP
        shell: pwsh
        run: |
          Remove-Item deploy.zip -Force -ErrorAction Ignore
          Compress-Archive -Path ${{ env.FUNC_SRC }}\* -DestinationPath deploy.zip -Force

      - name: Validate ZIP
        shell: pwsh
        run: |
          Remove-Item zip-temp -Recurse -Force -ErrorAction Ignore
          Expand-Archive deploy.zip -DestinationPath zip-temp -Force
          if (-Not (Test-Path "zip-temp/host.json")) { Write-Error "❌ host.json missing"; Exit 1 }
          if (Test-Path "zip-temp/apps/api-functions") { Write-Error "❌ nested folder"; Exit 1 }
          if (-Not (Test-Path "zip-temp/node_modules/.prisma/client")) { Write-Error "❌ prisma client missing"; Exit 1 }
          Write-Host "✅ ZIP OK"

      - name: Deploy via Publish Profile
        uses: Azure/functions-action@v1
        with:
          app-name:                       livekit-agent-azure-func
          slot-name:                      Production
          package:                        './deploy.zip'
          publish-profile:                ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_FF8DCA89135F49D0BAFC08A0152A293C }}
          scm-do-build-during-deployment: false
          enable-oryx-build:              false
          remote-build:                   false
