name: Deploy API Functions with Prisma Migrations

on:
  push:
    branches:
      - main
    paths:
      - 'apps/api-functions/**'
      - '.github/workflows/deploy-api-functions.yml'

permissions:
  id-token: write
  contents: read

jobs:
  deploy_api_functions:
    runs-on: ubuntu-latest

    env:
      # Si tus funciones necesitan variables de entorno comunes, agrégalas aquí.
      # Por ejemplo:
      # FUNCTION_ENV_VAR: ${{ secrets.SOME_SECRET }}
      # Para Azure login:
      AZURE_CLIENT_ID:        ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID:        ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID:  ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }} # JSON del Service Principal con permisos para desplegar

      - name: Install dependencies for API Functions
        working-directory: apps/api-functions
        run: npm ci

      - name: Run Prisma Migrations (SQL Admin)
        working-directory: apps/api-functions
        env:
          PGHOST: livekit-agent-azure-postgres-server-flexible.postgres.database.azure.com
          PGUSER: livekitadmin
          PGPASSWORD: ADcc2024.    # Para prueba; lo ideal es: ${{ secrets.POSTGRES_ADMIN_PASSWORD }}
          PGDATABASE: postgres
          PGPORT: 5432
          PGSSLMODE: require
          DATABASE_URL: >-
            postgresql://livekitadmin:ADcc2024.@livekit-agent-azure-postgres-server-flexible.postgres.database.azure.com:5432/postgres?schema=public&sslmode=require
        run: |
          # Verificar que Prisma encuentra el schema en prisma/schema.prisma
          ls prisma/schema.prisma
          # Introspección para confirmar conexión
          npx prisma db pull
          # Aplicar migraciones pendientes
          npx prisma migrate deploy

      - name: Build API Functions (TypeScript)
        working-directory: apps/api-functions
        run: npm run build
        # Asegúrate de que tu package.json tenga un script "build" que compile TS a dist/

      - name: Deploy API Functions to Azure
        uses: Azure/functions-action@v1
        with:
          app-name:        ${{ secrets.AZURE_FUNCTIONAPP_NAME }}   # nombre de tu Function App en Azure
          publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}
          package:         apps/api-functions

